/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2019 Ha Thach for Adafruit Industries
 * Copyright (c) 2023 Frederic Torres
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
 /*
  ramdisk-3-files.ino
  Ram disk which expose 3 files
  - README.TXT  / ReadOnly 
  - WRITEME.TXT
  - VIEWME.JPG  / ReadOnly 
  Example written by Frederic Torres - 2023/02
  
  Links about FAT12
    
    https://fileadmin.cs.lth.se/cs/Education/EDA385/HT09/student_doc/FinalReports/FAT12_overview.pdf
    Video https://www.youtube.com/watch?v=cOCU1qug0Lo, https://www.youtube.com/watch?v=HcNjEY-tzo0
    https://oriont.net/posts/fat12-overview
    https://oh4.co/site/fat12.html
    https://samskalicky.wordpress.com/2013/08/08/a-look-back-at-the-fat12-file-system/
    https://en.wikipedia.org/wiki/File_Allocation_Table#File%20Allocation%20Table
    https://www.lifewire.com/what-is-file-allocation-table-fat-2625877
    https://www.ercankoclar.com/wp-content/uploads/2017/11/The-FAT-File-System.pdf
    http://www.c-jump.com/CIS24/Slides/FAT/lecture.html
    https://github.com/qihaiyan/fat12
 */

#ifndef RAMDISK_H_
#define RAMDISK_H_

#define README_CONTENTS "This is TinyUSB MassStorage device demo on RAM disk with multiple files."
#define WRITE_CONTENTS "Write me. You can update this content with any text editor.\rDo not exceed 512 characters.\rChanges are kept in memory."

// Physical memory allocation for the disk data structure, may not represent the virtual size of the disk

#define FAT_VALUE_UNUSED            0x00 // Unused 
#define FAT_VALUE_RESERVED_CLUSTER  0xFF0-0xFF6 // Reserved cluster 
#define FAT_VALUE_BAD_CLUSTER       0xFF7 // Bad cluster 
#define FAT_VALUE_LAST_CLUSTER      0xFFF // 0xFF8-0xFFF Last cluster in a file

// Bit Mask Attribute
#define FA_READ_ONLY      0x01
#define FA_HIDDEN         0x02
#define FA_SYSTEM         0x04
#define FA_VOLUME_LABEL   0x08
#define FA_SUB_DIRECTORY  0x10
#define FA_FILE_ARCHIVE   0x20
#define FA_FILE_ARCHIVE_READ_ONLY (FA_FILE_ARCHIVE+FA_READ_ONLY)

uint8_t msc_disk[DISK_BLOCK_NUM][DISK_BLOCK_SIZE] = {

    /* ------------- Block0: Boot Sector -------------
     byte_per_sector = DISK_BLOCK_SIZE; 
     fat12_sector_num_16  = DISK_BLOCK_NUM; 
     sector_per_cluster = 1; 
     reserved_sectors = 1; 
     fat_num = 1; 
     fat12_root_entry_num = 16; 
     sector_per_fat     = 1; sector_per_track = 1; 
     head_num = 1; 
     hidden_sectors = 0; 
     drive_number = 0x80;
     media_type = 0xf8; 
     extended_boot_signature = 0x29; 
     filesystem_type = "FAT12   "; 
     volume_serial_number = 0x1234; 
     volume_label = "TinyUSB MSC";
     FAT magic code at offset 510-511
     */
    {
        0xEB, 0x3C, 0x90, // Dummy jump instruction, not used (e.g., 0xEB 0xFE 0x90)
        //  M     S     D     O     S     5     .     0
        0x4D, 0x53, 0x44, 0x4F, 0x53, 0x35, 0x2E, 0x30, 
        // BIOS Parameter Block [19]
        0x00, 0x02,    // Byte per Sector: Value (2 << 8) + 0 == 512, Bytes per logical sector in powers of two; the most common value is 512. [2]
        0x01,          // Sector/Cluster. Logical sectors per cluster. 
        0x01, 0x00,    // Value: 1, Reserved sector count. The number of sectors before the first FAT in the file system image. Should be 1 for FAT12/FAT16. Usually 32 for FAT32
        0x01,          // Number of File Allocation Tables. Almost always 2 but in FAT12 it is 1; [1]   
        0x10, 0x00,    // 16, Maximum number of root directory entries ==> 16 * 32 == 512 / 512 == 1 We have only one sector for the root directory
                       // Since we have 16 directory entry / sector (512) and WE ONLY HAVE 16-1 (*15*) ENTRIES (VOLUME_ID use one entry), this mean we only have one sector for the root directory

        0x04, 0x01, // TOTAL_SECTOR_COUNT 260, All:133120b, 130Kb,  DataOnly:131072b, 128Kb

        0xF8,         /* Media descriptor - Fixed disk (i.e. Hard disk).
                          0xF8 - Fixed disk (i.e. Hard disk).        
                          0xF0 - 3.5" Double Sided, 80 tracks per side, 18 or 36 sectors per track (1.44MB or 2.88MB). 5.25" Double Sided, 15 sectors per track (1.2MB). Used also for other media types. 
                          0xF9 - 3.5" Double sided, 80 tracks per side, 9 sectors per track (720K). 5.25" Double sided, 40 tracks per side, 15 sectors per track (1.2MB)
                          0xFA - 5.25" Single sided, 80 tracks per side, 8 sectors per track (320K)
                          0xFB - 3.5" Double sided, 80 tracks per side, 8 sectors per track (640K)
                          0xFC - 5.25" Single sided, 40 tracks per side, 9 sectors per track (180K)
                          0xFD - 5.25" Double sided, 40 tracks per side, 9 sectors per track (360K). Also used for8"
                      */

        0x02, 0x00,   /* 2 - Sectors per FAT
                            Number of sectors per FAT. Each sector is allocated 12-bits (hence FAT12) in the FAT.
                            That means that 24-bits or 3 bytes is used for every 2 files.
                            Since the first three bytes in the FAT are reserved, that leaves 509 byes in the first sector. 
                            With 3 sectors total in the FAT (1536 bytes) 1022 sectors can be allocated
                            (1536 â€“ 3 reserved bytes = 1533 remaining bytes, 1533 / 3 bytes per group = 511 groups,
                            2 sectors per group (12-bits each) gives 511 * 2 = 1022 sectors.
                            ((1 * 512)-3) / 3 * 2 == 339.3 sectors == 173738.6 bytes == 169Kb
                            ((2 * 512)-3) / 3 * 2 == 680 sectors == 348160 bytes == 340Kb
                            ((3 * 512)-3) / 3 * 2 == 1022 sectors == 523264 bytes == 511Kb

                            Explained ((2[Sector] * 512)-3) / 3 * 2[12bEntry] == 680 sectors == 348160 bytes == 340Kb
                      */
        0x01, 0x00,    // 1 - Sectors per track
        0x01, 0x00,    // 1 - Number of heads 
        0x00, 0x00, 0x00, 0x00, // Hidden sectors - ignore
        0x00, 0x00, 0x00, 0x00, // FAT12 mode, Total sector count for FAT32 (0 for FAT12 and FAT16), Total sectors (if greater than 65535; otherwise, see offset 0x13)

        0x80, 0x00,    // Ignore
        0x29,          // Boot signature - Extended boot signature. This is a signature byte that indicates that the following three fields in the boot sector are present.
                        // The value should be 0x29 to indicate that.
        0x78, 0x56, 0x34, 0x12,  // Volume ID or Volume_serial_number = 0x12345678 [4]; // MSX-DOS 2 disk serial number (default: 0x00000000).
        'f', 'D', 'r', 'i', 'v', 'e', ' ', ' ', 'v', '0', '1', 
        0x46, 0x41, 0x54, 0x31, 0x32, 0x20, 0x20, 0x20,  // File system type (e.g. "FAT12   ", "FAT16   ")
        0x00, 0x00,

        // Zero up to 2 last bytes of FAT magic code
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

        0x00, 0x00, 0x55, 0xAA // <<< FAT magic code -- Boot sector signature (should be 0xAA55)
    },

    // ------------- Block1: FAT12 Linked list[0] 1/2 sector -------------
    {
        /*
            0x00          Unused
            0xFF0-0xFF6   Reserved cluster
            0xFF7         Bad cluster
            0xFF8-0xFFF   Last cluster in a file (4088-4095)      
            0x01-0xFF0-1  This cluster is in use, and the next cluster is in location contains in this value
        */
        0xF8, 0xFF, 0x00, // FAT ID for 12 bit values, 0xFFF for second 12 bit values, - First 2 logical entries must be F8FF - Reserved
                          // BUG in TinyUSB, Since the first three bytes in the FAT are reserved, that leaves 509 byes in the first sector.  -- https://samskalicky.wordpress.com/2013/08/08/a-look-back-at-the-fat12-file-system/
        // 8 sectors - DOES NOT WORK
        // Decode value 1(even)   v1 + ((v2 & ~(128 + 64 + 32 + 16)) << 8)
        // Decode value 2(odd)  ((v2 & ~(8 + 4 + 2 + 1)) >> 4) + (v3 << 4)
        // b1      b2        b3

      // README.TXT is 1 sector, 1 Terminator + WRITEME.TXT is 1 sector, 1 Terminator
      0xFF, 0xFF, 0xFF,  // a1:4095, a2:0000, FAT[002, 003]

      // VIEWME.JPG 10s
      // File:FredImage5k.jpg, size:4612, sector:10
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
      // FAT_LINKEDLIST: 10 sectors (even), => 9 address + 1 Terminator, fileStartSector: 4
      0x05, 0x60, 0x00,  // a1:0005, a2:0006, FAT[002, 003]
      0x07, 0x80, 0x00,  // a1:0007, a2:0008, FAT[004, 005]
      0x09, 0xA0, 0x00,  // a1:0009, a2:0010, FAT[006, 007]
      0x0B, 0xC0, 0x00,  // a1:0011, a2:0012, FAT[008, 009]
      0x0D, 0xE0, 0x00,  // a1:0013, a2:0014, FAT[010, 011]
      0x0F, 0xF0, 0xFF,  // a1:0015, a2:4095, FAT[/Terminator]   

    },

    // ------------- Block2: FAT12 Linked list[0] 2/2 sector - NOT USED YET -------------
    {
        0x00, 0x00, 0x00, 0x00  
    },

    // ------------- Block3: Root Directory -------------
    {
        // The root directory is limited to 512 => 512 / 32 = 15 Files + VOLUME

        // First entry is volume label
        'f', 'r', 'e', 'd', 'd', 'y', ' ', ' ', // Filename
        'd', 'r', 'v',                          // Extension
        FA_VOLUME_LABEL,                        // Attribute
        0x00, 0x00,                             // Reserved
        0x43, 0x08,                             // Creation time 01:02:03
        0x41, 0x56,                             // Creation date 2023/02/01
        0x41, 0x56,                             // Last accessed date
        0x00, 0x00,                             // Ignored in FAT 12
        0x43, 0x08,                             // Last write time
        0x41, 0x56,                             // Last write date
        0x00, 0x00,                             // First logical sector
        0x00, 0x00, 0x00, 0x00,                 // File size

        // Second entry is readme.txt file
        'R', 'E', 'A', 'D', 'M', 'E', ' ', ' ', // Filename
        'T', 'X', 'T',                          // Extension
        FA_FILE_ARCHIVE + FA_READ_ONLY,         // Attribute
        0x00, 0xC6,                             // Reserved
        0x43, 0x08,                             // Creation time 01:02:03
        0x41, 0x56,                             // Creation date 2023/02/01
        0x41, 0x56,                             // Last accessed date
        0x00, 0x00,                             // Ignored in FAT 12
        0x43, 0x08,                             // Last write time
        0x41, 0x56,                             // Last write date
/*>>>*/ 0x02, 0x00,                             // First logical sector/cluster // Always start at address 2 FAT block 1
        sizeof(README_CONTENTS) - 1, 0x00, 0x00, 0x00, // file's size  512 >> 8 == 2 File Size:512b, 0Kb, sectorCount:1
                                                       // The size is less than 255 so we store the result in the first byte

        // Third entry is writeme.txt file
        'W', 'R', 'I', 'T', 'E', 'M', 'E', ' ', // Filename
        'T', 'X', 'T',                          // Extension
        FA_FILE_ARCHIVE  ,                      // Attribute
        0x00, 0xC6,                             // Reserved
        0x43, 0x08,                             // Creation time 01:02:03
        0x41, 0x56,                             // Creation date 2023/02/01
        0x41, 0x56,                             // Last accessed date
        0x00, 0x00,                             // Ignored in FAT 12
        0x43, 0x08,                             // Last write time
        0x41, 0x56,                             // Last write date
/*>>>*/ 0x03, 0x00,                             // First logical sector/cluster // Always start at address 2 FAT block 1
        sizeof(WRITE_CONTENTS) - 1, 0x00, 0x00, 0x00, // file's size  512 >> 8 == 2 File Size:512b, 0Kb, sectorCount:1
                                                       // The size is less than 255 so we store the result in the first byte

        // Forth entry is viewme.jph file
        'V', 'I', 'E', 'W', 'M', 'E', ' ', ' ', // Filename
        'J', 'P', 'G',                          // Extension
        FA_FILE_ARCHIVE + FA_READ_ONLY,         // Attribute
        0x00, 0xC6,                             // Reserved
        0x43, 0x08,                             // Creation time 01:02:03
        0x41, 0x56,                             // Creation date 2023/02/01
        0x65, 0x43,                             // Last access date
        0x00, 0x00,                             // Ignored in FAT 12
        0x21, 0x08,                             // Last write 01:01:01
        0x8B, 0x09,                             // Last write 1984/12/11
/*>>>*/ 0x04, 0x00,                             // First logical sector/cluster // start at address 4        
        0x04, 0x12, 0x00, 0x00,                 // FileSize :4612b, 4Kb, sectorCount:10, jsCode: 0x04 + (0x12 << 8), 
    },
    
    // PHYSICAL SECTOR 2 - Allocation msc_disk[DISK_BLOCK_NUM][DISK_BLOCK_SIZE] (4+1-README.TXT+39-VIEWME.JPG) 44*512 = 22528
    {
        README_CONTENTS
    },
    {
        WRITE_CONTENTS
    },
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
    // DATA BLOCK: startSector:4
    { // Sector index:0/10, FAT addr:4, SectorSize:512
         0xFF, 0xD8, 0xFF, 0xE0, 0x00, 0x10, 0x4A, 0x46, 0x49, 0x46, 0x00, 0x01, 0x01, 0x01, 0x00, 0x48, 0x00, 0x48, 0x00, 0x00, 0xFF, 0xDB, 0x00, 0x43, 0x00, 0x10, 0x0B, 0x0C, 0x0E, 0x0C, 0x0A, 0x10, 0x0E, 0x0D, 0x0E, 0x12, 0x11, 0x10, 0x13, 0x18, 0x28, 0x1A, 0x18, 0x16, 0x16, 0x18, 0x31, 0x23, 0x25, 0x1D, 0x28, 0x3A, 0x33, 0x3D, 0x3C, 0x39, 0x33, 0x38, 0x37, 0x40, 0x48, 0x5C, 0x4E, 0x40, 0x44, 0x57, 0x45, 0x37, 0x38, 0x50, 0x6D, 0x51, 0x57, 0x5F, 0x62, 0x67, 0x68, 0x67, 0x3E, 0x4D, 0x71, 0x79, 0x70, 0x64, 0x78, 0x5C, 0x65, 0x67, 0x63, 0xFF, 0xDB, 0x00, 0x43, 0x01, 0x11, 0x12, 0x12, 0x18, 0x15, 0x18, 0x2F, 0x1A, 0x1A, 0x2F, 0x63, 0x42, 0x38, 0x42, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0xFF, 0xC0, 0x00, 0x11, 0x08, 0x00, 0x76, 0x00, 0x8C, 0x03, 0x01, 0x22, 0x00, 0x02, 0x11, 0x01, 0x03, 0x11, 0x01, 0xFF, 0xC4, 0x00, 0x1F, 0x00, 0x00, 0x01, 0x05, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0xFF, 0xC4, 0x00, 0xB5, 0x10, 0x00, 0x02, 0x01, 0x03, 0x03, 0x02, 0x04, 0x03, 0x05, 0x05, 0x04, 0x04, 0x00, 0x00, 0x01, 0x7D, 0x01, 0x02, 0x03, 0x00, 0x04, 0x11, 0x05, 0x12, 0x21, 0x31, 0x41, 0x06, 0x13, 0x51, 0x61, 0x07, 0x22, 0x71, 0x14, 0x32, 0x81, 0x91, 0xA1, 0x08, 0x23, 0x42, 0xB1, 0xC1, 0x15, 0x52, 0xD1, 0xF0, 0x24, 0x33, 0x62, 0x72, 0x82, 0x09, 0x0A, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0xA2, 0xA3, 0xA4, 0xA5, 0xA6, 0xA7, 0xA8, 0xA9, 0xAA, 0xB2, 0xB3, 0xB4, 0xB5, 0xB6, 0xB7, 0xB8, 0xB9, 0xBA, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7, 0xD8, 0xD9, 0xDA, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7, 0xF8, 0xF9, 0xFA, 0xFF, 0xC4, 0x00, 0x1F, 0x01, 0x00, 0x03, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0xFF, 0xC4, 0x00, 0xB5, 0x11, 0x00, 0x02, 0x01, 0x02, 0x04, 0x04, 0x03, 0x04, 0x07, 0x05, 0x04, 0x04, 0x00, 0x01, 0x02, 0x77, 0x00, 0x01, 0x02, 0x03, 0x11, 0x04, 0x05, 0x21, 0x31, 0x06, 0x12, 0x41, 0x51, 0x07, 0x61, 0x71, 0x13, 0x22, 0x32, 0x81, 0x08, 0x14, 0x42, 0x91, 0xA1, 0xB1, 0xC1, 0x09, 0x23, 0x33, 0x52, 0xF0, 0x15, 0x62, 0x72, 0xD1, 0x0A, 0x16, 0x24, 0x34, 0xE1, 0x25, 0xF1, 0x17, 0x18, 0x19, 0x1A, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49
    },
    { // Sector index:1/10, FAT addr:5, SectorSize:512
         0x4A, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0xA2, 0xA3, 0xA4, 0xA5, 0xA6, 0xA7, 0xA8, 0xA9, 0xAA, 0xB2, 0xB3, 0xB4, 0xB5, 0xB6, 0xB7, 0xB8, 0xB9, 0xBA, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7, 0xD8, 0xD9, 0xDA, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7, 0xF8, 0xF9, 0xFA, 0xFF, 0xDA, 0x00, 0x0C, 0x03, 0x01, 0x00, 0x02, 0x11, 0x03, 0x11, 0x00, 0x3F, 0x00, 0xE1, 0xBF, 0xCF, 0x5A, 0x72, 0x81, 0xC6, 0xE3, 0x81, 0xEB, 0x42, 0x8C, 0x93, 0x9E, 0xDC, 0xD0, 0x7E, 0xF6, 0x47, 0x4A, 0x00, 0x92, 0x15, 0x57, 0x38, 0x90, 0x90, 0x07, 0x70, 0x47, 0x1F, 0x85, 0x23, 0x84, 0x04, 0xEC, 0xC9, 0xF4, 0xE3, 0xAD, 0x22, 0x02, 0xC7, 0x93, 0x81, 0xEB, 0x9A, 0x79, 0x45, 0x48, 0xFA, 0xFC, 0xDE, 0xA2, 0x81, 0x11, 0x6F, 0xEC, 0x40, 0x5C, 0x76, 0xC0, 0xA9, 0x03, 0xAE, 0xCC, 0x10, 0x47, 0xD0, 0x73, 0xF9, 0xD2, 0xA3, 0x6C, 0x38, 0x27, 0x2A, 0x47, 0x6A, 0xB9, 0x1B, 0xC3, 0x2C, 0x05, 0x0F, 0x0D, 0xDB, 0x1C, 0x60, 0xFE, 0x74, 0x01, 0x5E, 0x13, 0xE5, 0x1C, 0x6C, 0x0C, 0x70, 0x18, 0xEE, 0xE4, 0x0A, 0xB9, 0x34, 0xC7, 0xC9, 0xC1, 0x50, 0x14, 0x8E, 0x15, 0x5B, 0x83, 0x54, 0xDA, 0x06, 0x83, 0x73, 0x4A, 0xCD, 0x82, 0x3F, 0x3F, 0xF1, 0xA4, 0x17, 0x0C, 0xD0, 0x0C, 0x90, 0x5D, 0x78, 0x5E, 0xE4, 0x8F, 0xEB, 0x4B, 0x52, 0x75, 0x65, 0xAB, 0x69, 0x09, 0x45, 0x8D, 0xD8, 0x98, 0xFB, 0x2A, 0x91, 0x91, 0x9F, 0xD7, 0xD0, 0x53, 0xD8, 0x5B, 0x3A, 0xB8, 0x88, 0x32, 0x61, 0xF0, 0xF2, 0x12, 0x4E, 0xE1, 0xCE, 0x70, 0x3A, 0x7F, 0x2C, 0x60, 0x7A, 0xD5, 0x5B, 0x79, 0x14, 0x4E, 0x82, 0x51, 0x90, 0x5C, 0x12, 0x31, 0x8E, 0x95, 0x2A, 0x99, 0x0C, 0x64, 0x79, 0x71, 0x87, 0x7F, 0xBF, 0xE6, 0x8F, 0xE2, 0xFE, 0xF7, 0xE3, 0xEF, 0x43, 0x43, 0xB1, 0x22, 0x93, 0x1A, 0xAC, 0xF0, 0x95, 0xF2, 0x40, 0x2A, 0x12, 0x40, 0x0E, 0x72, 0x73, 0x82, 0x3F, 0x1A, 0xB8, 0x88, 0xAF, 0xB5, 0xC3, 0x0D, 0xC8, 0x06, 0x40, 0x60, 0x71, 0x91, 0xFF, 0x00, 0xD6, 0xCD, 0x67, 0x4D, 0x1D, 0xAC, 0x17, 0xA5, 0x50, 0x34, 0xE8, 0x79, 0x1C, 0xE3, 0x3C, 0x74, 0x3F, 0x4E, 0x3F, 0x5A, 0xB6, 0x2E, 0xED, 0x92, 0x5F, 0x31, 0xD5, 0x83, 0xA6, 0x38, 0x43, 0x93, 0xB8, 0xFA, 0x0C, 0xF4, 0xA8, 0x7A, 0x90, 0xF5, 0x2D, 0xDA, 0xA4, 0x6F, 0x77, 0xB1, 0xD9, 0xA4, 0xDC, 0xCA, 0xAA, 0xC8, 0xC3, 0x23, 0x27, 0xEF, 0x6D, 0xEA, 0x78, 0xFF, 0x00, 0x3E, 0xB3, 0x49, 0x65, 0x7B, 0x07, 0x9C, 0x0A, 0x95, 0x58, 0x09, 0x27, 0x77, 0xF1, 0x63, 0xD0, 0x77, 0xE0, 0xE7, 0xFC, 0x8A, 0x6C, 0xB6, 0xC2, 0x58, 0x21, 0xD4, 0x64, 0x9C, 0xCE, 0xF9, 0xDC, 0xA5, 0x89, 0x8D, 0x8E, 0xD3, 0x90, 0x39, 0xCF, 0xF8, 0xFA, 0x66, 0x99, 0xAF, 0x5E, 0xDD, 0xFD, 0xBA, 0x37, 0xB3, 0x9A, 0x5E, 0x57, 0x6B, 0xAA, 0x7C, 0xCA, 0x0E, 0x7A, 0x63, 0xA7, 0x4F, 0x7E, 0xD9, 0xEF, 0x45, 0x87, 0xEC, 0xEF, 0xB9, 0x0D, 0xBE, 0xA1, 0x14, 0xD7, 0x01, 0x65, 0x26, 0xE6, 0x3E, 0x33, 0x90, 0x76, 0x28, 0xC8, 0xE4, 0xE7, 0x93, 0x81, 0x93, 0x8E, 0x2A, 0xA5, 0xC4, 0x89, 0xF6, 0x86, 0x8A, 0x3B, 0xB8, 0x26
    },
    { // Sector index:2/10, FAT addr:6, SectorSize:512
         0x88, 0xF7, 0xC6, 0xCC, 0x74, 0xE3, 0x70, 0x00, 0x1F, 0xC7, 0x83, 0xF5, 0x35, 0x1E, 0xA5, 0x73, 0x73, 0x39, 0x3F, 0x69, 0x88, 0x26, 0xF0, 0x1B, 0x62, 0x44, 0x40, 0x18, 0xE4, 0x91, 0xEB, 0xEF, 0xC9, 0xEB, 0x4D, 0xB9, 0x84, 0x2E, 0xE0, 0xF2, 0xC6, 0x08, 0xE4, 0x31, 0x5C, 0x1F, 0xF3, 0xCF, 0x53, 0xE9, 0x54, 0xBC, 0x8B, 0x8A, 0x51, 0x56, 0x47, 0x43, 0xA6, 0xDD, 0x47, 0x67, 0x0A, 0xC9, 0x25, 0xB4, 0x40, 0x91, 0x95, 0x98, 0x6D, 0xCB, 0x0C, 0x75, 0xDD, 0xDF, 0x9E, 0xDD, 0xA9, 0x5B, 0x57, 0xD3, 0x24, 0x91, 0xDE, 0xE2, 0xD7, 0xCC, 0x76, 0x6C, 0x82, 0x98, 0x71, 0x8F, 0x4C, 0xD7, 0x29, 0xB3, 0x7B, 0xB7, 0xCE, 0x87, 0x8E, 0x30, 0xC3, 0x9F, 0xCF, 0xDE, 0x95, 0x1E, 0xE0, 0x83, 0xB1, 0x98, 0x80, 0x7B, 0x12, 0x07, 0xE9, 0x51, 0x2A, 0x31, 0x6C, 0xA5, 0x26, 0x40, 0xCB, 0xEF, 0x40, 0xC7, 0x42, 0x33, 0x48, 0x72, 0x4F, 0x1C, 0x7E, 0x34, 0x03, 0x9E, 0xDF, 0x88, 0xE6, 0xB5, 0x24, 0xB1, 0x1A, 0xB3, 0x8D, 0xAA, 0xBD, 0x7B, 0x63, 0x91, 0xEF, 0x4D, 0x24, 0x27, 0xF1, 0x64, 0xF4, 0xC1, 0xFF, 0x00, 0x0A, 0x60, 0x0F, 0x9C, 0x2F, 0x61, 0xC5, 0x2A, 0xC7, 0x9C, 0xF7, 0x20, 0x51, 0x60, 0xB0, 0xC2, 0xC3, 0x24, 0xF0, 0x3B, 0x01, 0x8A, 0x0A, 0xB6, 0xEC, 0x1C, 0x8A, 0xB0, 0xF6, 0x6E, 0x11, 0x4A, 0xAB, 0x13, 0x8E, 0x72, 0x28, 0x86, 0xDD, 0xFA, 0xAF, 0x40, 0x32, 0x72, 0x28, 0x02, 0x58, 0xA5, 0x2E, 0x13, 0x74, 0x44, 0xF3, 0x82, 0x76, 0x9E, 0x45, 0x5F, 0x5B, 0x35, 0x21, 0x59, 0x11, 0x08, 0xC1, 0x2A, 0x40, 0xE9, 0x9F, 0x4E, 0x9C, 0x0F, 0x7E, 0x9E, 0xB4, 0xFD, 0x3E, 0xC5, 0x55, 0x88, 0x99, 0x89, 0x89, 0xFE, 0x6D, 0xBD, 0xFE, 0x99, 0xED, 0xC5, 0x5D, 0xD4, 0xEF, 0x93, 0x4E, 0xB5, 0xCD, 0xA2, 0xA8, 0x93, 0x38, 0x47, 0x5F, 0xE1, 0xCF, 0xF5, 0xA1, 0x8D, 0x22, 0xA7, 0xF6, 0x76, 0x25, 0x07, 0x96, 0x74, 0x60, 0x4A, 0xEE, 0xE1, 0xBB, 0xF0, 0x69, 0x56, 0xC2, 0x29, 0xF6, 0x32, 0x88, 0xCA, 0xF9, 0x9B, 0xC9, 0x00, 0x12, 0x4F, 0x4C, 0x1F, 0x4F, 0xA5, 0x65, 0xD9, 0x6A, 0x97, 0x11, 0x5E, 0x89, 0x24, 0x94, 0xB8, 0x62, 0x03, 0xEF, 0x39, 0x04, 0x67, 0xAD, 0x75, 0xF1, 0x5B, 0x62, 0x69, 0xA5, 0x57, 0x8D, 0xB2, 0xEB, 0xB4, 0xE0, 0x10, 0x7E, 0x41, 0xD7, 0xF3, 0xEB, 0xFF, 0x00, 0xD7, 0xA1, 0x6A, 0x0C, 0xE6, 0x1F, 0x49, 0x28, 0xAE, 0x0B, 0x8E, 0x32, 0xC0, 0xED, 0x24, 0xE7, 0x1D, 0x07, 0x62, 0x33, 0x4E, 0x36, 0xC2, 0x48, 0xD0, 0x4D, 0x14, 0x49, 0x26, 0x00, 0x6E, 0xE4, 0x8F, 0x7C, 0xF4, 0x3E, 0xD8, 0xCD, 0x6A, 0x5D, 0x96, 0xDA, 0x67, 0x86, 0x55, 0x2A, 0xB9, 0x2E, 0x89, 0x90, 0x71, 0x8F, 0x5E, 0xC7, 0xD3, 0xE9, 0x59, 0xDA, 0x7D, 0xD7, 0xDA, 0x90, 0x87, 0xDF, 0xB9, 0x48, 0x1B, 0x8B, 0x16, 0x24, 0xFF, 0x00, 0x3A, 0x06, 0x88, 0x19, 0x9E, 0xD4, 0x6C, 0xC9, 0x65, 0x3F, 0x77, 0xA6, 0x06, 0x7D, 0x29, 0x91, 0x5E, 0x5D, 0x19, 0xE3, 0xF3, 0xCE, 0x53, 0x3F, 0x74, 0x60, 0x67, 0x1D, 0x6B, 0x52, 0xEA, 0xD1, 0x32, 0x0B, 0x14, 0x3C, 0x0C, 0x30, 0x3C, 0x12, 0x7D, 0x05, 0x28, 0xD2, 0xCC, 0xB6, 0x2C, 0xEA, 0xAC, 0xC4, 0x0C, 0x07, 0x51, 0x8C, 0x73, 0xFE, 0x14, 0xAD, 0x70, 0x20, 0x17, 0xCB, 0x24, 0x06, 0x42, 0x4A, 0xC8, 0x08, 0xC2, 0x0E, 0xA3, 0xDF, 0xFC, 0xF0, 0x2B, 0x29, 0xA2, 0xB8, 0x63, 0x31, 0x42, 0xA1, 0x73, 0x83, 0x83, 0x80, 0xF9, 0x3E, 0x95, 0xBD, 0x67, 0xA3, 0x79, 0x90, 0x34, 0xAB, 0x13, 0x48, 0x8A
    },
    { // Sector index:3/10, FAT addr:7, SectorSize:512
         0x72, 0x64, 0x52, 0x78, 0xE9, 0xC1, 0xED, 0x9C, 0x76, 0xEB, 0xD0, 0x55, 0x2B, 0xBB, 0x2D, 0x87, 0x74, 0x7E, 0x61, 0xC6, 0x0E, 0x31, 0xD0, 0x9E, 0x9F, 0xFE, 0xBF, 0xF1, 0xA9, 0x8C, 0x54, 0x76, 0x03, 0x29, 0x6D, 0x64, 0x05, 0x91, 0x9F, 0x63, 0x64, 0x0C, 0x1E, 0x73, 0x56, 0x3E, 0xCB, 0x2B, 0x01, 0xF2, 0x48, 0xDB, 0x7E, 0x5C, 0xA9, 0x03, 0xFA, 0xD3, 0xD8, 0xCA, 0x38, 0xFD, 0x79, 0xED, 0xFE, 0x7F, 0x5A, 0x5F, 0x3C, 0x9F, 0xB9, 0x8F, 0x7E, 0x7B, 0xD5, 0x5C, 0x56, 0x33, 0x17, 0x9E, 0x33, 0x9A, 0x90, 0x05, 0x41, 0x96, 0xFC, 0x05, 0x21, 0xE3, 0x9C, 0x55, 0xBB, 0x3B, 0x06, 0x9D, 0xD4, 0xB6, 0x70, 0x4F, 0x3C, 0xD3, 0x01, 0x6D, 0x60, 0x33, 0x20, 0x28, 0x46, 0xE3, 0xC6, 0xD0, 0x3A, 0x7F, 0x9C, 0xD5, 0xEB, 0x3D, 0x2E, 0x56, 0x93, 0x7C, 0x8B, 0x82, 0x78, 0x01, 0x97, 0xB7, 0xEB, 0xCD, 0x6C, 0xDA, 0xE9, 0xB1, 0x88, 0xA3, 0x44, 0x83, 0x95, 0xC3, 0x79, 0x83, 0x20, 0x9E, 0x4E, 0x33, 0x8C, 0x8E, 0x3A, 0xFD, 0x71, 0x5A, 0x56, 0xFA, 0x7B, 0x5C, 0x20, 0x28, 0x9F, 0x77, 0xF8, 0x59, 0x70, 0x7A, 0x7E, 0x9D, 0x4F, 0xE2, 0x7E, 0xA4, 0x2F, 0x41, 0xD8, 0xC5, 0x6D, 0x3C, 0xF9, 0x6D, 0x1B, 0x2F, 0x0A, 0x39, 0x7E, 0x57, 0xF3, 0xCE, 0x71, 0x55, 0xA3, 0xD3, 0x02, 0x2B, 0x67, 0x1E, 0x5B, 0x7F, 0x74, 0x8E, 0x54, 0xE7, 0x07, 0x35, 0xD2, 0x45, 0xA5, 0x98, 0x6E, 0x0C, 0x77, 0x87, 0x39, 0x3C, 0x36, 0x77, 0x67, 0xB8, 0x27, 0xD3, 0xAE, 0x39, 0x1F, 0xA0, 0xE5, 0xD3, 0x5B, 0x47, 0x61, 0x0C, 0xED, 0x0B, 0xBC, 0x99, 0x18, 0x24, 0xAE, 0xE3, 0x9F, 0xFF, 0x00, 0x5E, 0x3F, 0xC3, 0x8E, 0x5A, 0xF3, 0x13, 0x5D, 0x8C, 0x58, 0x74, 0xE7, 0xF3, 0x73, 0x13, 0xBB, 0x2A, 0xFF, 0x00, 0x12, 0xB9, 0x3F, 0x4A, 0xA7, 0xE2, 0x4B, 0x48, 0x92, 0xC5, 0x24, 0x51, 0x86, 0x46, 0x1C, 0x64, 0x60, 0x03, 0xEA, 0x3F, 0xC2, 0xAB, 0xDF, 0xF8, 0x8E, 0xE5, 0xDE, 0x58, 0x6D, 0x42, 0xC5, 0x11, 0x24, 0x64, 0x64, 0x93, 0xCF, 0x5E, 0x6B, 0x15, 0xE5, 0x77, 0x3F, 0x34, 0x8E, 0x73, 0xCF, 0xCC, 0x68, 0x02, 0x4B, 0x28, 0x92, 0x7B, 0xB8, 0x63, 0x98, 0x95, 0x8D, 0x9B, 0xE6, 0x39, 0xC7, 0x1F, 0x8D, 0x77, 0x46, 0x25, 0x96, 0xC8, 0x24, 0x00, 0xE0, 0xE3, 0x6E, 0x5B, 0xE5, 0xC0, 0x18, 0x18, 0x3F, 0x4E, 0xD5, 0xE7, 0xC7, 0x1B, 0x86, 0x4E, 0xEC, 0x7A, 0xFF, 0x00, 0x2A, 0xED, 0x21, 0xF1, 0x6E, 0x99, 0x15, 0x84, 0x71, 0x47, 0xA7, 0x49, 0x04, 0xA0, 0x00, 0xC2, 0x25, 0x50, 0xB9, 0xFC, 0xFF, 0x00, 0x98, 0xFC, 0x68, 0x04, 0x47, 0x27, 0x87, 0x6E, 0x65, 0x57, 0x70, 0xF3, 0x2B, 0x10, 0x70, 0x7B, 0x63, 0xD0, 0xF1, 0x58, 0x9A, 0x54, 0xBF, 0xD9, 0xDA, 0xA1, 0x8A, 0x56, 0x0A, 0x8F, 0xF2, 0x33, 0xE7, 0x85, 0xEE, 0x0F, 0x15, 0xD7, 0x69, 0x7A, 0xE4, 0x37, 0xCD, 0xC3, 0xA9, 0x2C, 0x39, 0x42, 0x36, 0x90, 0x7D, 0x2B, 0x0B, 0xC6, 0x50, 0x2C, 0x57, 0x96, 0xD2, 0xFC, 0xBB, 0xA5, 0x43, 0xBC, 0xA9, 0xE1, 0xB0, 0x7F, 0x1A, 0x43, 0x35, 0xE7, 0xD2, 0xBC, 0xC8, 0x8E, 0x18, 0x86, 0x23, 0xA0, 0xC8, 0x0C, 0x4F, 0x7F, 0x71, 0xFE, 0x7D, 0xAB, 0x4A, 0xC6, 0xD3, 0xEC, 0xB6, 0xA8, 0x8C, 0x4B, 0x36, 0xEE, 0x1C, 0x02, 0x48, 0xE3, 0x3C, 0x8E, 0x9D, 0x8F, 0xB7, 0x4A, 0xA9, 0xE1, 0x4B, 0xA5, 0xBB, 0xD2, 0x17, 0xEE, 0x34, 0xD0, 0x8D, 0x8C, 0xA4, 0x9C, 0x90, 0x3A, 0x13, 0x8E, 0x9C, 0x1F, 0x4A, 0xD2, 0x91, 0xAE, 0x06, 0x5B, 0xCC, 0x2A, 0xA8, 0x41, 0xEA, 0x71
    },
    { // Sector index:4/10, FAT addr:8, SectorSize:512
         0x81, 0xC9, 0x38, 0xE7, 0xAF, 0x03, 0x9F, 0x5C, 0x8E, 0xC0, 0xA5, 0x71, 0xB1, 0xB2, 0xDB, 0xCC, 0x82, 0x31, 0xE6, 0x66, 0x33, 0x96, 0x21, 0xB9, 0x20, 0x9C, 0x92, 0x72, 0x46, 0x4F, 0x39, 0x3D, 0x3F, 0x0C, 0x1A, 0xA4, 0xF6, 0xA5, 0x8B, 0x0C, 0xC5, 0x2A, 0xB0, 0x24, 0x05, 0x19, 0xE9, 0x81, 0x8E, 0xBD, 0x33, 0xD3, 0xB7, 0x5A, 0xD3, 0x76, 0x93, 0xCC, 0x00, 0x48, 0xBB, 0x31, 0x80, 0xAC, 0x79, 0xE7, 0x19, 0xCE, 0x7A, 0x9F, 0xC7, 0xDB, 0x8A, 0x11, 0x15, 0x40, 0x5D, 0xEA, 0xD3, 0x1C, 0xFC, 0xCD, 0xC6, 0xEF, 0xA7, 0x4F, 0x5F, 0xE7, 0x45, 0xC2, 0xC7, 0x23, 0x35, 0x99, 0xC9, 0x12, 0x85, 0x81, 0xB3, 0x82, 0x19, 0x94, 0x80, 0x7A, 0xE0, 0xB7, 0x43, 0xE9, 0x9F, 0x6A, 0x82, 0x1D, 0x1D, 0xAE, 0x10, 0xC8, 0x8A, 0xEC, 0x37, 0x30, 0xCB, 0x15, 0x1D, 0x09, 0x1C, 0x7C, 0xDD, 0x3D, 0xC5, 0x74, 0xF3, 0xC3, 0x1F, 0xFC, 0xB4, 0xDD, 0x22, 0xE3, 0x18, 0x40, 0x07, 0xE7, 0xC6, 0x08, 0xE0, 0x71, 0xED, 0xDC, 0x56, 0x7C, 0x28, 0xEA, 0xA4, 0x20, 0x50, 0xA0, 0x9C, 0x10, 0xC4, 0x67, 0xFC, 0x7D, 0x3F, 0x0A, 0x69, 0xD8, 0x1D, 0xD9, 0xC7, 0x5B, 0x42, 0x1C, 0xEF, 0x27, 0x20, 0x1E, 0x9D, 0xC7, 0xBF, 0x3C, 0x1F, 0xF3, 0xF5, 0x1D, 0x1D, 0x9B, 0x45, 0xB7, 0x60, 0x61, 0x1F, 0x1C, 0x04, 0x60, 0xD9, 0x1E, 0xBC, 0x7F, 0x4F, 0x4C, 0x7B, 0xD6, 0x35, 0x85, 0xBB, 0xB8, 0xDE, 0xE0, 0x82, 0x7A, 0x7A, 0x11, 0x82, 0x39, 0xFC, 0x71, 0xF5, 0xAD, 0xBB, 0x00, 0x88, 0xE4, 0xB8, 0x77, 0xC1, 0xDC, 0xC8, 0x08, 0xE4, 0x37, 0x20, 0xFF, 0x00, 0x2F, 0xF2, 0x68, 0x68, 0x48, 0xDE, 0xB0, 0x85, 0x00, 0x59, 0x65, 0x20, 0x73, 0xF7, 0x41, 0xED, 0xDB, 0x3C, 0x75, 0xFF, 0x00, 0x39, 0x35, 0x75, 0x62, 0xDD, 0x11, 0x11, 0xB3, 0xA7, 0x72, 0x57, 0x18, 0x38, 0xEF, 0xD7, 0xEB, 0xDE, 0xB0, 0xB4, 0xEB, 0x94, 0x8E, 0x43, 0x11, 0x78, 0xCC, 0xD8, 0xDD, 0x29, 0xE0, 0x6E, 0xC9, 0x19, 0x6F, 0x43, 0xC8, 0xEA, 0x08, 0xED, 0xD3, 0x8A, 0xD7, 0x8E, 0x62, 0xCE, 0x14, 0x0F, 0x30, 0x6C, 0x03, 0xE4, 0x18, 0x5C, 0xE4, 0x71, 0xCE, 0x39, 0xC9, 0x1F, 0x90, 0xE9, 0x49, 0x21, 0x8E, 0x31, 0xA5, 0xBC, 0x6F, 0x23, 0x47, 0x1A, 0x46, 0xA4, 0x7C, 0xCA, 0x3E, 0x61, 0x9C, 0x75, 0x23, 0x80, 0x3D, 0xCF, 0x1E, 0xF5, 0x8D, 0xE2, 0x85, 0x5B, 0x4D, 0x03, 0xCC, 0xF2, 0x1A, 0x29, 0x27, 0x0A, 0x72, 0x71, 0xC3, 0x1E, 0x48, 0x1D, 0xC7, 0x7C, 0xF0, 0x3A, 0xD6, 0xFC, 0xC6, 0x16, 0x4F, 0x25, 0xE5, 0x8E, 0x56, 0x2A, 0x52, 0x48, 0xB8, 0xE3, 0x83, 0x93, 0x8C, 0xFB, 0xF4, 0xEF, 0x9E, 0x7A, 0xD7, 0x13, 0xE3, 0x79, 0xD9, 0xAF, 0x2D, 0xED, 0xB7, 0x46, 0x63, 0x8E, 0x30, 0xDB, 0xA3, 0x5D, 0xA5, 0x8F, 0x20, 0x64, 0x64, 0xF4, 0xC7, 0xEB, 0x4E, 0xFD, 0x05, 0xE6, 0x73, 0x07, 0x93, 0xC7, 0x4F, 0xAD, 0x1B, 0x73, 0xD3, 0xA5, 0x28, 0x1D, 0xCE, 0x7F, 0x01, 0x46, 0x7D, 0xBA, 0xFF, 0x00, 0x9E, 0xD4, 0xC4, 0x21, 0x1E, 0xBF, 0xFE, 0xBA, 0x33, 0xFA, 0xD1, 0xEF, 0x9F, 0xC8, 0xD1, 0x8F, 0x6A, 0x00, 0x33, 0x8E, 0xE7, 0x34, 0xF6, 0x92, 0x47, 0x8C, 0x2B, 0x3B, 0x15, 0x1D, 0x01, 0x24, 0x81, 0x5A, 0x56, 0x9A, 0x06, 0xA3, 0x7B, 0x64, 0xB7, 0x56, 0xD0, 0x89, 0x22, 0x6C, 0x80, 0x43, 0x73, 0xC1, 0xEE, 0x29, 0xF1, 0xF8, 0x6F, 0x56, 0x79, 0x04, 0x6D, 0x68, 0xC9, 0x9C, 0xF2, 0xCC, 0x00, 0x1F, 0x8D, 0x01, 0x62, 0x7F, 0x07, 0xDF, 0x35, 0xA6, 0xA2, 0xF0, 0x2E, 0xFC, 0xDC, 0xAE, 0xC4
    },
    { // Sector index:5/10, FAT addr:9, SectorSize:512
         0xDB, 0x92, 0x37, 0xF6, 0xE0, 0x7E, 0x5D, 0x6B, 0xBB, 0xB3, 0x96, 0x70, 0xCE, 0x4B, 0x96, 0x62, 0x77, 0x15, 0x38, 0xF9, 0x0F, 0x75, 0xFC, 0xF8, 0xFC, 0x2B, 0x9A, 0xD2, 0x7C, 0x25, 0x35, 0xA5, 0xD4, 0x77, 0x32, 0xCA, 0xAD, 0x24, 0x6C, 0x36, 0x22, 0x83, 0x80, 0x7D, 0x58, 0xFB, 0x75, 0xC0, 0xEB, 0x8E, 0xDD, 0x6B, 0xA9, 0x89, 0x52, 0xDC, 0x6C, 0x49, 0x1A, 0x7C, 0x33, 0x15, 0x2B, 0xF3, 0x63, 0xD4, 0x01, 0xD8, 0x0C, 0x8F, 0xCE, 0x90, 0xC7, 0x90, 0xDE, 0x59, 0xC1, 0x0A, 0x37, 0x6D, 0x74, 0x7E, 0x71, 0xD8, 0xF4, 0xE4, 0xF4, 0xE3, 0x91, 0xC1, 0xAA, 0x86, 0xE2, 0x5B, 0xAD, 0xBE, 0x5D, 0xA4, 0xB3, 0xDA, 0xEE, 0xF9, 0x59, 0x72, 0x9B, 0x80, 0xE4, 0x10, 0x47, 0x50, 0x71, 0xF4, 0x22, 0xAC, 0xE4, 0xCF, 0xB4, 0x32, 0x49, 0xB1, 0x48, 0x60, 0x08, 0xDA, 0x48, 0xCE, 0x71, 0x9C, 0xFB, 0x74, 0xF6, 0x39, 0xA6, 0xCB, 0x2B, 0x6D, 0x91, 0x04, 0xCC, 0x00, 0xFE, 0x2D, 0xE7, 0x9C, 0xFD, 0x39, 0xED, 0xC5, 0x26, 0x8A, 0x2B, 0x9B, 0x65, 0x78, 0x03, 0xBA, 0xAC, 0x72, 0x83, 0xF7, 0x42, 0x03, 0x82, 0x0F, 0xDD, 0xE7, 0xA6, 0x40, 0x03, 0xB7, 0xB1, 0x1D, 0x6A, 0x93, 0x5A, 0x69, 0x9B, 0x88, 0x7B, 0x0F, 0x38, 0x0C, 0x6C, 0xC0, 0x0E, 0x11, 0x71, 0xC2, 0x83, 0xE9, 0xF5, 0xAB, 0x6B, 0x29, 0x86, 0x05, 0x48, 0xD8, 0x45, 0xF3, 0x1C, 0x67, 0x1F, 0x31, 0x62, 0x4E, 0x7E, 0xBC, 0xF3, 0xC6, 0x7F, 0x5C, 0xC3, 0x2B, 0xCB, 0x23, 0x0F, 0x2B, 0xEC, 0xCF, 0xB4, 0x6D, 0x73, 0x32, 0x13, 0xF3, 0x0E, 0xBB, 0x71, 0x8F, 0x97, 0xFF, 0x00, 0xAF, 0x4B, 0xA6, 0x82, 0x39, 0x4B, 0x70, 0xA1, 0x42, 0xF9, 0x68, 0xDC, 0xF2, 0x58, 0x6E, 0x27, 0xDB, 0x07, 0xA7, 0x4A, 0xB3, 0x71, 0x73, 0x2B, 0x3C, 0x7B, 0xD5, 0x56, 0x44, 0x24, 0x0D, 0xA7, 0x24, 0x9E, 0xE3, 0xFC, 0xF1, 0x54, 0xED, 0x3C, 0xD6, 0x90, 0x28, 0xC2, 0x2F, 0x1B, 0x57, 0x8E, 0x39, 0xF7, 0xEA, 0x71, 0xF8, 0xE3, 0xDF, 0x15, 0x6A, 0x57, 0x60, 0x81, 0x25, 0x74, 0x30, 0xA9, 0x2B, 0xD0, 0x60, 0x60, 0xE7, 0xAE, 0x33, 0xF8, 0x1D, 0xDD, 0x2A, 0xAF, 0xD0, 0x44, 0xF0, 0x2D, 0xC3, 0xC4, 0x82, 0x43, 0x1C, 0x8C, 0xAD, 0xF2, 0xAC, 0xAC, 0xC5, 0x97, 0x3E, 0x83, 0xB7, 0x3E, 0xE2, 0xB7, 0x61, 0x60, 0x55, 0x63, 0x32, 0xCB, 0x1A, 0xA3, 0x74, 0xCE, 0x01, 0xE3, 0xA8, 0x39, 0x3E, 0xA3, 0xF1, 0xAE, 0x75, 0x6E, 0x16, 0xD5, 0xD7, 0xE6, 0x58, 0xD7, 0x27, 0x86, 0xE7, 0x9F, 0x5E, 0x33, 0x81, 0xEF, 0xEF, 0xF5, 0xAD, 0xA8, 0x25, 0x55, 0x1B, 0x4A, 0xF9, 0x72, 0x64, 0x80, 0x18, 0x6E, 0xDF, 0x82, 0x79, 0x39, 0xE3, 0xD4, 0xF3, 0xD3, 0x3D, 0x3B, 0xD2, 0xB1, 0x57, 0x34, 0xBE, 0xD3, 0x6F, 0x3D, 0xC4, 0x70, 0x33, 0xED, 0x91, 0x3A, 0x64, 0x05, 0xCF, 0x07, 0x07, 0x24, 0xF4, 0xE4, 0x8E, 0x3F, 0xBC, 0x78, 0xAE, 0x77, 0xC5, 0x7A, 0x25, 0xE5, 0xDD, 0xF2, 0xDC, 0x59, 0xA4, 0xB7, 0x25, 0xBE, 0x52, 0x87, 0x04, 0xC7, 0xE8, 0x3E, 0x9D, 0x7A, 0xD6, 0xCC, 0x6B, 0x39, 0x66, 0x55, 0x96, 0x18, 0xE2, 0x2A, 0x03, 0x1F, 0x2B, 0x79, 0x03, 0x8C, 0x0C, 0x93, 0xF5, 0xEB, 0xCF, 0xF4, 0x95, 0x16, 0x68, 0x61, 0x56, 0x50, 0xBB, 0x14, 0x0D, 0x9B, 0xC6, 0x36, 0xAF, 0x73, 0xFA, 0xF4, 0x18, 0xFA, 0x50, 0x07, 0x99, 0x5C, 0x46, 0x61, 0x95, 0xA2, 0x6E, 0x19, 0x4E, 0x18, 0x74, 0xC1, 0x1D, 0xAA, 0x06, 0x38, 0x38, 0x15, 0x2D, 0xC3, 0x17, 0xB8, 0x91, 0xF1, 0xF7, 0x9C, 0x9F, 0xD6, 0xA3, 0xE3, 0xF0, 0xAA, 0x33
    },
    { // Sector index:6/10, FAT addr:10, SectorSize:512
         0x14, 0x96, 0x3D, 0x46, 0x28, 0x19, 0xF4, 0xFD, 0x69, 0x31, 0xE9, 0xCD, 0x28, 0xE9, 0xC8, 0xE6, 0x81, 0x9D, 0x87, 0x83, 0xEF, 0x02, 0xD8, 0x4B, 0x01, 0x95, 0xFF, 0x00, 0x77, 0x26, 0xE0, 0x8B, 0xC9, 0x00, 0x8E, 0xDC, 0xFB, 0x7A, 0x57, 0x4E, 0x97, 0x19, 0x52, 0xF8, 0x51, 0x8E, 0x86, 0x45, 0x39, 0xF5, 0xE9, 0x9A, 0xE0, 0x3C, 0x35, 0x72, 0x90, 0x5F, 0x34, 0x72, 0x30, 0x55, 0x95, 0x36, 0xFC, 0xC7, 0xBF, 0x6A, 0xEA, 0x21, 0x9F, 0xCD, 0x45, 0x22, 0x51, 0x21, 0xDC, 0xC1, 0x9F, 0x9D, 0xBB, 0x86, 0x30, 0x38, 0x27, 0xB7, 0x6E, 0xD5, 0x2C, 0xA4, 0xCD, 0x29, 0x1D, 0x61, 0x91, 0x25, 0xDA, 0x5A, 0x2D, 0xC0, 0x36, 0xDE, 0x8A, 0x33, 0x82, 0x79, 0x19, 0xEA, 0x49, 0x27, 0xEB, 0xCF, 0x18, 0x36, 0x2E, 0x61, 0x80, 0xFC, 0x97, 0x28, 0xA2, 0x1E, 0x85, 0x4A, 0x85, 0x57, 0x39, 0xE3, 0x3C, 0xF4, 0xFA, 0xD6, 0x79, 0x6C, 0xC2, 0xC2, 0x35, 0xFB, 0x44, 0x80, 0x83, 0xE5, 0xA2, 0xB7, 0x27, 0xB7, 0x1D, 0x3D, 0xF2, 0x73, 0xFE, 0x16, 0x66, 0xB8, 0x8C, 0x5C, 0x32, 0x3B, 0x13, 0x70, 0x88, 0x0B, 0xAA, 0xC8, 0x32, 0x0F, 0x04, 0xE0, 0xF0, 0x0F, 0xDE, 0xEB, 0xC0, 0xE9, 0xF4, 0x08, 0x64, 0x92, 0x3C, 0x0D, 0x06, 0x6D, 0x6D, 0x50, 0x99, 0x57, 0xE4, 0x74, 0x24, 0x2E, 0x07, 0x72, 0x3A, 0xE3, 0xA7, 0xBF, 0xE7, 0x8A, 0x85, 0xE4, 0xB9, 0xB8, 0x2E, 0x91, 0x46, 0xAE, 0xD9, 0xCE, 0x09, 0xED, 0xC0, 0xF5, 0xFA, 0x70, 0x3D, 0x6A, 0x03, 0x29, 0xB7, 0x8D, 0xD9, 0xC3, 0x6C, 0x6F, 0x53, 0xD4, 0xE7, 0x1D, 0x8F, 0x3D, 0xB8, 0x3E, 0x87, 0x07, 0x15, 0x52, 0x5B, 0x93, 0x72, 0x40, 0x92, 0x4C, 0xC5, 0xB7, 0x73, 0x20, 0x5C, 0x9E, 0xDC, 0x11, 0x9F, 0xAF, 0x53, 0xF9, 0xD3, 0x68, 0x48, 0x6D, 0xE5, 0xCC, 0x90, 0x34, 0x8A, 0xCC, 0xC2, 0x40, 0x48, 0xD8, 0x18, 0x1F, 0x98, 0x0E, 0x9C, 0x75, 0x35, 0x98, 0xDA, 0x85, 0xCC, 0xF8, 0x71, 0x2B, 0x8C, 0x81, 0x92, 0x19, 0xB9, 0xF7, 0xE3, 0x15, 0x2D, 0xCC, 0xD1, 0xEF, 0xF2, 0xA2, 0x6C, 0x81, 0x80, 0xAA, 0x14, 0xE0, 0x7A, 0x03, 0x81, 0xEF, 0xEF, 0xFE, 0x34, 0xA1, 0x9E, 0x06, 0x52, 0xCD, 0x1A, 0xEE, 0x27, 0x2D, 0xC0, 0xEB, 0x49, 0x8D, 0x3E, 0xE6, 0x6A, 0xC9, 0x97, 0xFB, 0xC1, 0x4E, 0x7A, 0x75, 0xCF, 0xE5, 0x57, 0x5E, 0xF2, 0x39, 0x9A, 0x12, 0x8A, 0x30, 0x01, 0x2E, 0x3A, 0xE4, 0xF1, 0xCE, 0x7B, 0x63, 0x9C, 0x1F, 0xFE, 0xB5, 0x63, 0x23, 0x15, 0xC0, 0x38, 0x38, 0xF6, 0xAD, 0x1B, 0x43, 0x19, 0x75, 0x62, 0x19, 0x86, 0x79, 0x01, 0xBF, 0xCF, 0xE3, 0x55, 0xB1, 0x04, 0x8F, 0x33, 0x24, 0xC0, 0x26, 0xEF, 0x98, 0x0D, 0xEF, 0x90, 0x41, 0xE3, 0x1F, 0xE7, 0x9F, 0xE9, 0x5A, 0x70, 0x48, 0x81, 0x7C, 0xD4, 0x96, 0x24, 0x93, 0x03, 0x24, 0x45, 0x8C, 0x76, 0xCE, 0x72, 0x33, 0xD4, 0xFE, 0x15, 0x9B, 0x2D, 0xB9, 0x79, 0x32, 0x0A, 0x9F, 0xF6, 0x76, 0x8C, 0xF3, 0xEC, 0x7B, 0x53, 0x52, 0x43, 0x13, 0x15, 0x59, 0x42, 0x90, 0x0E, 0x0E, 0xEC, 0x01, 0x45, 0xDB, 0x1E, 0xC7, 0x4A, 0x2E, 0x92, 0x30, 0x18, 0x30, 0x38, 0x00, 0x9C, 0x9E, 0x00, 0xC0, 0xCE, 0x00, 0xFE, 0xBE, 0x94, 0xCB, 0xAD, 0x5A, 0xDD, 0xA2, 0xF3, 0x6D, 0x83, 0x94, 0x0A, 0x59, 0xB6, 0x26, 0xE5, 0x6F, 0x50, 0x7B, 0x0C, 0x91, 0xDF, 0xFC, 0x2B, 0x22, 0xC2, 0x6F, 0x35, 0xB6, 0xA9, 0x19, 0x2C, 0x19, 0x49, 0xC7, 0x07, 0xD7, 0x04, 0xE3, 0x3D, 0xB3, 0xDB, 0xEB, 0x52, 0xEB, 0x57, 0x6B, 0x1E, 0x9B, 0x20, 0x11, 0xA8, 0x32, 0xFC, 0xAB
    },
    { // Sector index:7/10, FAT addr:11, SectorSize:512
         0x90, 0x72, 0xA3, 0xD0, 0x64, 0x9E, 0x31, 0xDF, 0x8C, 0xE3, 0xBD, 0x2B, 0x0E, 0xE7, 0x2E, 0x49, 0x6E, 0x7D, 0x69, 0xA4, 0xF5, 0xE9, 0x4B, 0xD4, 0xD0, 0x00, 0x1C, 0xD5, 0x12, 0x28, 0x20, 0x8C, 0xD2, 0x12, 0x33, 0x8C, 0xE6, 0x83, 0x93, 0xD6, 0x86, 0x38, 0xEB, 0x40, 0x87, 0x44, 0xCA, 0x24, 0x42, 0xE3, 0x2A, 0x08, 0xC8, 0xF6, 0xAE, 0xC2, 0xC9, 0x12, 0x24, 0x92, 0x48, 0x99, 0x63, 0x0D, 0xF3, 0x90, 0x41, 0x5C, 0x8E, 0xDC, 0x74, 0x07, 0xA1, 0xF5, 0xFE, 0x43, 0x8D, 0x07, 0x6B, 0x03, 0xCF, 0x07, 0x35, 0xDB, 0x5B, 0x13, 0x2D, 0xB4, 0x06, 0xDE, 0x45, 0x89, 0x14, 0x0D, 0xAF, 0xD0, 0xF0, 0x3A, 0xE7, 0x20, 0x8E, 0xC4, 0xFB, 0xFE, 0xA3, 0x45, 0x23, 0x46, 0xDA, 0xE2, 0x48, 0x2D, 0x57, 0x7D, 0xD1, 0xF2, 0xF0, 0x14, 0x0E, 0x77, 0x7F, 0xC0, 0x7A, 0xE4, 0xF4, 0xE3, 0xEB, 0xD6, 0x93, 0xCC, 0x6B, 0xC6, 0xFF, 0x00, 0x48, 0xB8, 0x9E, 0x41, 0xD4, 0x20, 0xDC, 0x8A, 0xA4, 0x7B, 0x7D, 0x4F, 0x5F, 0x9B, 0xD4, 0x91, 0xCE, 0x26, 0xB5, 0x8A, 0x28, 0xED, 0xCC, 0x8B, 0x04, 0xFB, 0xCA, 0xEC, 0xF3, 0xF8, 0xF2, 0xC7, 0x3E, 0x99, 0x27, 0x00, 0xF7, 0xC6, 0x3E, 0x5E, 0x0D, 0x54, 0xBE, 0x96, 0xD2, 0xDE, 0x12, 0x97, 0x33, 0x85, 0x44, 0x70, 0xC0, 0x16, 0xFB, 0xDD, 0x86, 0x06, 0x08, 0x3E, 0xA7, 0xB0, 0x27, 0xA8, 0xC7, 0x32, 0x86, 0xC6, 0xDD, 0xF9, 0x46, 0x6F, 0x26, 0x59, 0x07, 0xDC, 0x5F, 0xE3, 0x62, 0xD9, 0xC1, 0x39, 0xCF, 0x72, 0x30, 0x3F, 0x2F, 0xC2, 0xAB, 0x5E, 0x49, 0x1D, 0xD5, 0xE2, 0x98, 0x99, 0xA3, 0x50, 0xDC, 0xB7, 0xCA, 0x59, 0xB8, 0xEE, 0x7E, 0x9E, 0x95, 0x52, 0x42, 0x75, 0x0B, 0xD5, 0x16, 0x7E, 0x5C, 0xAC, 0x50, 0x6D, 0x40, 0x72, 0x99, 0xC0, 0x2C, 0x48, 0x00, 0x80, 0x01, 0xC0, 0xE7, 0xA9, 0xC7, 0x5E, 0x2A, 0x94, 0xF2, 0xCB, 0x0C, 0xEC, 0xA4, 0x4B, 0x1B, 0x87, 0xDA, 0x23, 0x69, 0x08, 0x03, 0xDC, 0x00, 0x78, 0x23, 0x9E, 0x9E, 0x9D, 0xAA, 0x96, 0x9A, 0x12, 0xC7, 0xDC, 0xCC, 0x44, 0xB2, 0x29, 0x2D, 0xDC, 0x72, 0x4F, 0x07, 0xF9, 0xF1, 0xEB, 0xCD, 0x42, 0xB7, 0x3E, 0x61, 0x62, 0x02, 0xB6, 0x0E, 0x09, 0x18, 0xC1, 0x3E, 0xBF, 0x8F, 0x5F, 0xC6, 0xAB, 0x4F, 0x3A, 0x86, 0x6F, 0x95, 0x48, 0xC9, 0xE0, 0x81, 0x8E, 0x47, 0xEB, 0x50, 0x87, 0xC1, 0x3E, 0x66, 0x43, 0x64, 0xE7, 0x9C, 0x54, 0xD8, 0x65, 0x71, 0x8C, 0x9C, 0x9F, 0xD2, 0xAD, 0xC5, 0x2C, 0x6C, 0xE4, 0x94, 0x55, 0xDC, 0x79, 0xDB, 0xC7, 0x6E, 0x79, 0x3D, 0x09, 0xC7, 0xF9, 0xEB, 0x59, 0xF9, 0x62, 0x73, 0x53, 0xC7, 0x20, 0x18, 0x0D, 0xCA, 0xF4, 0xEB, 0xFD, 0x7B, 0x53, 0x62, 0x35, 0x1A, 0x65, 0x5C, 0x28, 0x61, 0xB7, 0x1D, 0x0F, 0x18, 0x1E, 0xFF, 0x00, 0xFE, 0xBF, 0x7A, 0xA7, 0x20, 0xF9, 0xB0, 0x06, 0x4B, 0x1C, 0xFA, 0x13, 0xF8, 0x0A, 0x85, 0xA4, 0xDA, 0x13, 0x19, 0xE3, 0xAF, 0x3F, 0xAF, 0xF9, 0xEF, 0x56, 0xA0, 0x0B, 0x2C, 0x83, 0xB8, 0x27, 0x82, 0x48, 0xFC, 0xBE, 0xB4, 0x01, 0x62, 0xCA, 0x20, 0x84, 0x0C, 0x42, 0x5C, 0x9E, 0x03, 0x37, 0x5E, 0x3D, 0x41, 0xE3, 0xF1, 0xA5, 0xD6, 0xC6, 0x2C, 0xA3, 0x01, 0x40, 0x51, 0x27, 0x1D, 0x0F, 0x63, 0xE8, 0x7A, 0x56, 0x8D, 0x99, 0x01, 0x3C, 0xA6, 0x96, 0x57, 0x62, 0xA7, 0x11, 0xA9, 0xDC, 0x48, 0xEA, 0x7E, 0x5C, 0x13, 0xF9, 0x72, 0x06, 0x6B, 0x33, 0xC4, 0x32, 0xA3, 0x34, 0x11, 0xA2, 0x6D, 0xE0, 0xB9, 0x23, 0xA1, 0xCF, 0xBF, 0x7E, 0x94, 0x91, 0x4C, 0xC6, 0xFA, 0x1A, 0x68, 0x5A
    },
    { // Sector index:8/10, FAT addr:12, SectorSize:512
         0x71, 0xFA, 0xD2, 0x01, 0x8F, 0x5A, 0xA2, 0x41, 0x86, 0x3F, 0x1A, 0x50, 0x71, 0xE8, 0x47, 0xA5, 0x1D, 0x69, 0xD1, 0xAE, 0x49, 0x19, 0xC0, 0xF5, 0xF4, 0xA0, 0x43, 0x32, 0x46, 0x3F, 0x4C, 0xD7, 0x51, 0x67, 0x2E, 0x2C, 0x12, 0x36, 0x3F, 0x75, 0x7E, 0x56, 0x39, 0xED, 0xDF, 0x1F, 0xD4, 0x7B, 0x75, 0xAE, 0x67, 0x39, 0x3F, 0x4A, 0xE8, 0x6D, 0xE7, 0x89, 0xF4, 0xD8, 0xCC, 0x85, 0x42, 0xAA, 0x63, 0x71, 0x24, 0xE0, 0xF4, 0xE9, 0xD3, 0xD6, 0x93, 0x29, 0x1A, 0x51, 0x5C, 0xDB, 0x88, 0x44, 0x76, 0xFB, 0x96, 0x34, 0x04, 0x0C, 0xE4, 0x29, 0xC7, 0x19, 0x3C, 0x7C, 0xDC, 0xFA, 0x55, 0xEB, 0x6B, 0x5B, 0x15, 0xFF, 0x00, 0x4A, 0xB8, 0x29, 0x79, 0x31, 0x04, 0x92, 0xDF, 0x37, 0x03, 0xA6, 0x13, 0xA7, 0xE1, 0x8E, 0x3D, 0xB3, 0x58, 0x92, 0x9B, 0x78, 0xE1, 0x2C, 0x1E, 0x36, 0x91, 0x1B, 0xE7, 0x54, 0xF9, 0x5C, 0xE4, 0x7D, 0xE1, 0x90, 0x3A, 0x7A, 0xE7, 0xA7, 0x7A, 0x48, 0x6E, 0xD5, 0x14, 0x41, 0xE7, 0xC1, 0x2B, 0xB2, 0x16, 0x72, 0x07, 0x42, 0x09, 0x1D, 0x33, 0xC9, 0xEE, 0x31, 0xD3, 0xD8, 0x74, 0x16, 0x80, 0xF5, 0x35, 0x1F, 0xCA, 0x9F, 0xCC, 0x9F, 0xEC, 0xD1, 0x15, 0x40, 0xE5, 0x14, 0xC4, 0xA0, 0x28, 0xED, 0xC0, 0x1E, 0x9F, 0x5F, 0xBC, 0x7D, 0xAB, 0x9E, 0xB9, 0xDE, 0xEC, 0x0B, 0x98, 0x82, 0xA8, 0xC9, 0x11, 0x2E, 0x14, 0x93, 0xD7, 0x18, 0xFF, 0x00, 0xEB, 0xFF, 0x00, 0x41, 0x76, 0x69, 0x24, 0xC3, 0x00, 0xF2, 0x08, 0xCF, 0x25, 0x5A, 0x40, 0x31, 0x8F, 0x5C, 0x2F, 0x3F, 0xCF, 0xDE, 0xA8, 0x31, 0x3C, 0x88, 0xB0, 0x54, 0x29, 0xE3, 0x39, 0x1E, 0xBD, 0x7A, 0xFA, 0xF7, 0xED, 0x45, 0xC2, 0xC5, 0x32, 0x36, 0xB6, 0xF6, 0x20, 0x8E, 0xC4, 0x13, 0x8F, 0xAF, 0x3F, 0xD6, 0x90, 0x1D, 0xBF, 0x7B, 0x66, 0x7F, 0xDE, 0x0B, 0xFA, 0x1A, 0x63, 0xBB, 0x67, 0xA9, 0xC7, 0x4E, 0x33, 0xC7, 0xE7, 0x40, 0x94, 0x8E, 0x11, 0x82, 0x0F, 0x4E, 0x68, 0x11, 0x08, 0x19, 0x23, 0x34, 0xF9, 0x73, 0xB1, 0x40, 0xF5, 0xA2, 0x8A, 0xA0, 0x11, 0x79, 0x2A, 0x70, 0x3F, 0x1A, 0xD2, 0xD3, 0x22, 0x24, 0x87, 0x50, 0x18, 0x33, 0x6C, 0x0A, 0xC4, 0x80, 0x49, 0xC0, 0xE7, 0x1D, 0xB2, 0x45, 0x14, 0x54, 0xB1, 0xA3, 0x61, 0x35, 0x1B, 0x9B, 0x4B, 0x16, 0xBC, 0x88, 0x8C, 0xA1, 0x03, 0x04, 0xF0, 0x79, 0xEB, 0x8C, 0x77, 0xC7, 0xF9, 0xEB, 0x58, 0x1A, 0xCD, 0xCA, 0xDD, 0xDF, 0xBC, 0xF1, 0xA9, 0x41, 0x28, 0x0E, 0x41, 0x3D, 0xC8, 0xE7, 0xE9, 0xCD, 0x14, 0x50, 0x86, 0xF6, 0x28, 0x67, 0x8F, 0x6A, 0x5E, 0x80, 0x51, 0x45, 0x32, 0x44, 0xEF, 0x4A, 0x47, 0x7A, 0x28, 0xA0, 0x05, 0x3C, 0x81, 0x80, 0x01, 0x35, 0xA1, 0x63, 0x71, 0xE5, 0x04, 0x8D, 0x81, 0x67, 0x0F, 0xB5, 0x79, 0x38, 0x04, 0xF7, 0xEB, 0xFD, 0x28, 0xA2, 0x8E, 0x82, 0x46, 0x81, 0x81, 0x66, 0x89, 0x1A, 0x24, 0x44, 0x91, 0xB7, 0x00, 0x59, 0x41, 0x04, 0x8C, 0x0E, 0x71, 0x8E, 0xC3, 0x8C, 0x7E, 0x55, 0x3D, 0x95, 0xB4, 0x77, 0x42, 0x42, 0xC4, 0x2F, 0xDD, 0x07, 0xF7, 0x60, 0x90, 0x79, 0xC9, 0x07, 0xAF, 0x5C, 0x71, 0xEC, 0x0D, 0x14, 0x50, 0x86, 0xCA, 0x8F, 0x17, 0x94, 0x13, 0xA1, 0x0F, 0x92, 0x08, 0x3C, 0x8C, 0x71, 0x8F, 0xA7, 0xA6, 0x73, 0xDB, 0xE9, 0x4D, 0xB8, 0xB3, 0x96, 0x39, 0x02, 0xBB, 0xA3, 0x92, 0xBB, 0x81, 0x3C, 0xE7, 0xA7, 0x5E, 0x33, 0xDE, 0x8A, 0x2A, 0x0A, 0x66, 0x5C, 0xCA, 0xD1, 0x93, 0x9C, 0x7E, 0x07, 0xEA, 0x2A, 0x2D, 0xC7, 0xB8, 0xCF, 0xA7, 0x34, 0x51, 0x56
    },
    { // Sector index:9/10, FAT addr:13, SectorSize:4
         0x89, 0x3F, 0xFF, 0xD9
    },



};

#endif /* RAMDISK_H_ */
